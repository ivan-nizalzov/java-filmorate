CREATE TABLE IF NOT EXISTS USERS
(
    USER_ID  INT PRIMARY KEY AUTO_INCREMENT,
    NAME     VARCHAR(255) NOT NULL,
    EMAIL    VARCHAR(255) NOT NULL,
    LOGIN    VARCHAR(255) NOT NULL,
    BIRTHDAY DATE
);

CREATE TABLE IF NOT EXISTS FILMS
(
    FILM_ID      INT PRIMARY KEY AUTO_INCREMENT,
    NAME         varchar(50)  NOT NULL,
    DESCRIPTION  varchar(200) NOT NULL,
    RELEASE_DATE date         NOT NULL,
    DURATION     integer      NOT NULL,
    MPA_ID       integer      NOT NULL
);

CREATE TABLE IF NOT EXISTS GENRES
(
    GENRE_ID INT PRIMARY KEY AUTO_INCREMENT,
    NAME     varchar(100) NOT NULL
);

CREATE TABLE IF NOT EXISTS FILM_GENRE
(
    GENRE_ID INT,
    FILM_ID  INT,
    PRIMARY KEY (GENRE_ID, FILM_ID),
    FOREIGN KEY (GENRE_ID) REFERENCES GENRES (GENRE_ID) ON DELETE CASCADE,
    FOREIGN KEY (FILM_ID) REFERENCES FILMS (FILM_ID) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS MPA
(
    MPA_ID INT PRIMARY KEY AUTO_INCREMENT,
    NAME   varchar(100) NOT NULL
);

CREATE TABLE IF NOT EXISTS FRIENDSHIP
(
    USER_ID  INT NOT NULL,
    FRIEND_ID INT NOT NULL,
    PRIMARY KEY (USER_ID, FRIEND_ID),
    FOREIGN KEY (USER_ID) REFERENCES USERS (USER_ID) ON DELETE CASCADE,
    FOREIGN KEY (FRIEND_ID) REFERENCES USERS (USER_ID) ON DELETE CASCADE
);


CREATE TABLE IF NOT EXISTS FILM_LIKES
(
    LIKE_ID INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    FILM_ID int NOT NULL,
    USER_ID int NOT NULL,
    FOREIGN KEY (FILM_ID) REFERENCES FILMS (FILM_ID) ON DELETE CASCADE,
    FOREIGN KEY (USER_ID) REFERENCES USERS (USER_ID) ON DELETE CASCADE
);